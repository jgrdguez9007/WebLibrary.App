@model WebLibrary.App.Controllers.DocsController.DocListVm
@using System.Globalization
@using WebLibrary.App.Controllers

@{
    string Nice(string? s) =>
        string.IsNullOrWhiteSpace(s) ? "" :
        CultureInfo.CurrentCulture.TextInfo.ToTitleCase(s.Replace("-", " "));

    var cat  = Nice(Model?.Cat);
    var type = Nice(Model?.Type);
    ViewData["Title"] = string.IsNullOrEmpty(type) ? cat : $"{cat} · {type}";

    // Lista tipada correctamente
    var items = Model?.Items ?? new List<DocsController.DocListItem>();
    int COLS = 6;
}

<section class="space-y-4">
  <div>
    <h1 class="text-3xl font-bold tracking-tight">@cat</h1>
    @if (!string.IsNullOrEmpty(type))
    { <p class="text-sm text-slate-600">Tipo: <span class="font-medium">@type</span></p> }
  </div>

  @if (items.Count == 0)
  {
    <div class="rounded-2xl border bg-white p-10 text-center text-slate-600">
      No hay documentos en esta categoría.
    </div>
  }
  else
  {
    <style>
      /* Tabla 6 columnas fijas */
      .doc-grid { border-collapse: separate; border-spacing: 16px 8px; margin: 0 auto; }
      .doc-grid td { vertical-align: top; padding: 0; }
      .doc-cell   { width: 120px; text-align: center; }
      .doc-thumb  {
        width: 100px; height: 150px; object-fit: contain;
        background:#f1f5f9; border-radius: 8px; display:block; margin:0 auto; padding:4px;
      }
      .doc-title  {
        display:block; margin-top:6px; width: 120px; font-size:12px; line-height:1.2;
        overflow:hidden; text-overflow:ellipsis; word-break:break-word;
        display:-webkit-box; -webkit-line-clamp:2; -webkit-box-orient:vertical;
      }
    </style>

    <table class="doc-grid">
      <colgroup>
        <col style="width:120px" /><col style="width:120px" /><col style="width:120px" />
        <col style="width:120px" /><col style="width:120px" /><col style="width:120px" />
      </colgroup>
      <tbody>
      @for (int i = 0; i < items.Count; i += COLS)
      {
          var slice = items.Skip(i).Take(COLS).ToList();
          <!-- Fila 1: miniaturas -->
          <tr>
            @foreach (var d in slice)
            {
              var pdf   = string.IsNullOrWhiteSpace(d.PdfUrl)   ? "#" : d.PdfUrl;
              var thumb = string.IsNullOrWhiteSpace(d.ThumbUrl) ? "/img/placeholder.svg" : d.ThumbUrl;
              <td class="doc-cell">
                <a href="@pdf" target="_blank" rel="noopener noreferrer" title="@d.Title">
                  <img class="doc-thumb" src="@thumb" alt="Portada de @d.Title" loading="lazy" decoding="async" />
                </a>
              </td>
            }
            @for (int k = slice.Count; k < COLS; k++) { <td class="doc-cell"></td> }
          </tr>

          <!-- Fila 2: títulos -->
          <tr>
            @foreach (var d in slice)
            {
              var pdf = string.IsNullOrWhiteSpace(d.PdfUrl) ? "#" : d.PdfUrl;
              <td class="doc-cell">
                <a href="@pdf" target="_blank" rel="noopener noreferrer" class="doc-title" title="@d.Title">
                  @d.Title
                </a>
              </td>
            }
            @for (int k = slice.Count; k < COLS; k++) { <td class="doc-cell"></td> }
          </tr>
      }
      </tbody>
    </table>
  }
</section>
